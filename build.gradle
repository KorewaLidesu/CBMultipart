
buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
		maven { url = 'https://maven.outlands.top/releases' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.99.+', changing: true
		//classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
	}
}

apply plugin: 'scala'
apply plugin: 'net.minecraftforge.gradle'

group = "codechicken"
archivesBaseName = "ForgeMultipart"

targetCompatibility = "17"
sourceCompatibility = "17"

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
	// Load config.  It shall from now be referenced as simply config or project.config
	def prop = new Properties()
	prop.load(it)
	project.ext.config = new ConfigSlurper().parse prop
}

minecraft {

	mappings channel: "stable", version: "39-1.12"

	accessTransformer = file('src/main/resources/fmp_at.cfg')

	runs {
		client {
			workingDirectory project.file('run/client')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

		}

		server {
			workingDirectory project.file('run/server')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			mods {
				"${mod_id}" {
					source sourceSets.main
				}
			}
		}
	}
}

configurations {
	pack
	compile {
		extendsFrom pack
	}
}

repositories {
	maven {
		name = "chickenbones"
		url = "https://chickenbones.net/maven"
	}
	maven {
		name = "JEI Maven."
		url = "https://dvs1.progwml6.com/files/maven"
	}
	maven {
		name 'Cleanroom Maven'
		url 'https://maven.cleanroommc.com/'
	}
	maven {
		url "https://repo.cleanroommc.com/snapshots"
	}
	maven {
		url "https://maven.outlands.top/releases/"
	}
	maven {
		url "https://jitpack.io/"
	}
	mavenCentral()
}



ext {
	lwjglLibraries = [
			[
					'lwjgl3-glfw', 'lwjgl3-jemalloc', 'lwjgl3-openal',
					'lwjgl3-opengl', 'lwjgl3-stb', 'lwjgl3-tinyfd', 'lwjgl3'
			],

			[
					'natives-linux-arm64', 'natives-linux-arm32', 'natives-linux',
					'natives-macos-arm64', 'natives-macos',
					'natives-windows-arm64', 'natives-windows-x86', 'natives-windows'
			]
	]
	lwjglArch = 'natives-linux'
}


dependencies {
	compileOnly "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:deobf"
	compileOnly "codechicken:ChickenASM:1.12-${config.cc_asm_version}"
    compileOnly "mezz.jei:jei_${config.mc_version}:${config.jei_version}"
	minecraft ("com.cleanroommc:cleanroom:15.24.0.3007") {
		exclude group: 'org.scala-lang'
	}
	implementation 'org.scala-lang:scala-library:2.12.18'
	lwjglLibraries[0].each {
		lwjglLibraries[1].each { arch ->
			runtimeOnly "org.lwjgl3:$it:3.3.2-22-CLEANROOM:$lwjglArch"
		}
	}

}

version = "${project.config.mod_version}." + System.getenv("BUILD_NUMBER") ?: "84"

println config.mc_version + "-" + config.forge_version
// Setup the forge minecraft plugin data. Specify the preferred forge/minecraft version here

processResources {
	//redo task if any of these properties change
	inputs.property "version", project.version
	inputs.property "mc_version", config.mc_version
	inputs.property "ccl_version", config.ccl_version

	// Replace properties in info files
	from(sourceSets.main.resources.srcDirs) {
		include '*.info'
		expand 'version': project.version, 'mc_version': config.mc_version, 'ccl_version': config.ccl_version
	}
    rename '(.+_at.cfg)', 'META-INF/$1'
}


def commonManifest = {
	attributes 'ContainedDeps': "ChickenASM-1.12-${config.cc_asm_version}.jar"
    attributes 'FMLAT': 'fmp_at.cfg'
}

jar {
	manifest commonManifest
	from configurations.pack
}

task srcJar(type: Jar) {
	from sourceSets.main.allSource
}

task deobfJar(type: Jar) {
	manifest commonManifest
	from sourceSets.main.output
	from configurations.pack
}



// Tell the artifact system about our extra jars
artifacts {
	archives srcJar, deobfJar
}


